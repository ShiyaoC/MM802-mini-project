{"ast":null,"code":"var _jsxFileName = \"/Users/shiyao/Documents/MM/MM802/mini_project/MM802-mini-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport DatePicker from \"./components/DatePicker\";\nimport Menu from './components/Menu';\nimport TopN from './components/TopN';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow, Circle } from \"react-google-maps\";\nimport axios from 'axios';\nimport * as d3 from \"d3\";\nimport { red } from '@material-ui/core/colors';\nimport { count } from 'd3';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box'; // import Map from \"./components/WrappedMap\"\n// d3 bar chart: https://www.youtube.com/watch?v=hOzKr8H_438\n// var data = {\"Month\":{\"0\":1,\"1\":2,\"2\":3,\"3\":4,\"4\":5,\"5\":6,\"6\":7,\"7\":8,\"8\":9,\"9\":10,\"10\":11,\"11\":12},\"count\":{\"0\":1137,\"1\":918,\"2\":977,\"3\":1146,\"4\":1360,\"5\":1357,\"6\":1295,\"7\":1149,\"8\":1083,\"9\":1213,\"10\":1065,\"11\":973}};\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\n  const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\n  const [value, setValue] = useState(\"\");\n  const [topN, setTopN] = useState(\"\");\n  const [queryResult, setQueryResult] = useState({});\n  const [selectedNeighbourhood, setSelectedNeighbourhood] = useState(null);\n  const [testData, setTestData] = useState([{}]);\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = React.useState({\n    \"Month\": {\n      \"0\": 1,\n      \"1\": 2,\n      \"2\": 3,\n      \"3\": 4,\n      \"4\": 5,\n      \"5\": 6,\n      \"6\": 7,\n      \"7\": 8,\n      \"8\": 9,\n      \"9\": 10,\n      \"10\": 11,\n      \"11\": 12\n    },\n    \"count\": {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0\n    }\n  });\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClick = async () => {\n    let res = await axios.post('http://localhost:3003/api/', {\n      startDate: selectedStartDate,\n      endDate: selectedEndDate,\n      type: value,\n      topn: parseInt(topN)\n    }); // console.log(res)\n\n    setQueryResult(res); // console.log(queryResult)\n\n    setData(res.data);\n    console.log(\"data update!\");\n    console.log(queryResult.data);\n    console.log(data);\n  };\n\n  function Map() {\n    console.log(queryResult);\n\n    if (queryResult.data == undefined || queryResult.data.Month != undefined) {\n      console.log(\"undefined!!!\");\n      return /*#__PURE__*/_jsxDEV(GoogleMap, {\n        defaultZoom: 10,\n        defaultCenter: {\n          lat: 53.544388,\n          lng: -113.490929\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this);\n    } // console.log(typeof queryResult.data[0].ratio)\n\n\n    return /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 10,\n      defaultCenter: {\n        lat: 53.544388,\n        lng: -113.490929\n      },\n      children: [selectedNeighbourhood && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        onCloseClick: () => {\n          setSelectedNeighbourhood(null);\n        },\n        position: {\n          lat: selectedNeighbourhood.Latitude,\n          lng: selectedNeighbourhood.Longitude\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedNeighbourhood.Neighbourhood\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: typeof selectedNeighbourhood.ratio == 'undefined' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"total crime count: \", selectedNeighbourhood.Count]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Most frequent crime: \", selectedNeighbourhood.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), queryResult.data.map(neighbourhood => /*#__PURE__*/_jsxDEV(Circle, {\n        defaultCenter: {\n          lat: neighbourhood.Latitude,\n          lng: neighbourhood.Longitude\n        },\n        radius: typeof neighbourhood.ratio == 'undefined' ? neighbourhood.Count : neighbourhood.ratio * 5000,\n        onClick: () => {\n          setSelectedNeighbourhood(neighbourhood);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n  const WrappedMap = withScriptjs(withGoogleMap(Map));\n  const svgRef = useRef();\n  useEffect(() => {\n    if (data.Month != undefined) {\n      const xtry = [];\n\n      for (let i = 0; i < Object.keys(data.Month).length; i++) {\n        xtry.push(data.count[i]);\n      }\n\n      const ydata = xtry;\n      const width = 800;\n      const height = 300;\n      const svg = d3.select(svgRef.current).attr('width', width).attr('height', height).style('overflow', 'visible').style('margin-top', '75px').style('margin-left', '75px');\n      svg.append(\"text\").attr(\"transform\", \"translate(100,0)\").attr(\"x\", width / 4).attr(\"y\", 50).attr(\"font-size\", \"24px\").text(\"Crime in Neighbourhood by Months\"); // set scaling\n\n      var xScale = d3.scaleBand().range([0, width]).padding(0.4),\n          yScale = d3.scaleLinear().range([height, 0]);\n      var g = svg.append(\"g\").attr(\"transform\", \"translate(\" + 100 + \",\" + 100 + \")\");\n      xScale.domain(ydata.map((val, i) => i));\n      yScale.domain([0, d3.max(ydata)]);\n      g.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(xScale).tickFormat(function (d) {\n        return d + 1;\n      })).append(\"text\").attr(\"y\", height - 250).attr(\"x\", width / 2).attr(\"text-anchor\", \"end\").attr(\"stroke\", \"black\").text(\"Month\");\n      g.append(\"g\").call(d3.axisLeft(yScale).tickFormat(function (d) {\n        return d;\n      }).ticks(15)).append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", 0 - height / 4).attr(\"dy\", \"-5.1em\").attr(\"text-anchor\", \"end\").attr(\"stroke\", \"black\").text(\"Amount of Crime\");\n      g.selectAll(\".bar\").data(ydata).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", (v, i) => xScale(i)).attr(\"y\", yScale).attr(\"width\", xScale.bandwidth()).attr(\"height\", val => height - yScale(val));\n    }\n  }, [data]); // send data from backend to frontend\n\n  useEffect(() => {\n    axios.get('http://localhost:3003/members').then(response => {\n      console.log(\"SUCCESS\", response);\n      setTestData(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MM802 mini project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"space-around\",\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        setSelectedDate: setSelectedStartDate,\n        selectedDate: selectedStartDate,\n        label: \"Start Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        setSelectedDate: setSelectedEndDate,\n        selectedDate: selectedEndDate,\n        label: \"End Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        setValue: setValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TopN, {\n        setTopN: setTopN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleClick,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100vw',\n        height: '50vh',\n        marginTop: 40\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(WrappedMap, {\n          googleMapURL: 'https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDviHOxXfm0fv1fbQ3gT0GF81moFw99an4',\n          loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `100%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 31\n          }, this),\n          containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `400px`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 33\n          }, this),\n          mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `100%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100vw',\n        height: '100vh',\n        marginTop: 20,\n        marginBottom: 20\n      },\n      children: typeof queryResult.data === 'undefined' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: typeof queryResult.data.Month === 'undefined' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data for bar chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" showing bar chart \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), \",\", /*#__PURE__*/_jsxDEV(\"svg\", {\n            ref: svgRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"dev\", {\n      style: {\n        width: '100vw',\n        height: '50vh',\n        marginTop: 20,\n        marginBottom: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"end of page \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tLEnNy3dvnhBCjPRbupQEc/x9pM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shiyao/Documents/MM/MM802/mini_project/MM802-mini-project/src/App.js"],"names":["React","useState","useRef","useEffect","DatePicker","Menu","TopN","Grid","makeStyles","Button","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","Circle","axios","d3","red","count","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Box","App","selectedStartDate","setSelectedStartDate","Date","selectedEndDate","setSelectedEndDate","value","setValue","topN","setTopN","queryResult","setQueryResult","selectedNeighbourhood","setSelectedNeighbourhood","testData","setTestData","open","setOpen","data","setData","handleClickOpen","handleClose","handleClick","res","post","startDate","endDate","type","topn","parseInt","console","log","Map","undefined","Month","lat","lng","Latitude","Longitude","Neighbourhood","ratio","Count","map","neighbourhood","WrappedMap","svgRef","xtry","i","Object","keys","length","push","ydata","width","height","svg","select","current","attr","style","append","text","xScale","scaleBand","range","padding","yScale","scaleLinear","g","domain","val","max","call","axisBottom","tickFormat","d","axisLeft","ticks","selectAll","enter","v","bandwidth","get","then","response","catch","error","marginTop","marginBottom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,aAAlC,EAAiDC,MAAjD,EAAyDC,UAAzD,EAAqEC,MAArE,QAAkF,mBAAlF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,KAAT,QAAsB,IAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,GAAP,MAAgB,mBAAhB,C,CACA;AACA;AAGA;;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4C5B,KAAK,CAACC,QAAN,CAAe,IAAI4B,IAAJ,EAAf,CAAlD;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwC/B,KAAK,CAACC,QAAN,CAAe,IAAI4B,IAAJ,EAAf,CAA9C;AACA,QAAM,CAACG,KAAD,EAAOC,QAAP,IAAmBhC,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACiC,IAAD,EAAMC,OAAN,IAAiBlC,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACmC,WAAD,EAAcC,cAAd,IAAgCpC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqC,qBAAD,EAAwBC,wBAAxB,IAAoDtC,QAAQ,CAAC,IAAD,CAAlE;AACA,QAAM,CAACuC,QAAD,EAAWC,WAAX,IAA0BxC,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAxC;AACA,QAAM,CAACyC,IAAD,EAAOC,OAAP,IAAkB3C,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAAC2C,IAAD,EAAOC,OAAP,IAAkB7C,KAAK,CAACC,QAAN,CAAe;AAAC,aAAQ;AAAC,WAAI,CAAL;AAAO,WAAI,CAAX;AAAa,WAAI,CAAjB;AAAmB,WAAI,CAAvB;AAAyB,WAAI,CAA7B;AAA+B,WAAI,CAAnC;AAAqC,WAAI,CAAzC;AAA2C,WAAI,CAA/C;AAAiD,WAAI,CAArD;AAAuD,WAAI,EAA3D;AAA8D,YAAK,EAAnE;AAAsE,YAAK;AAA3E,KAAT;AAAwF,aAAQ;AAAC,WAAI,CAAL;AAAO,WAAI,CAAX;AAAa,WAAI,CAAjB;AAAmB,WAAI,CAAvB;AAAyB,WAAI,CAA7B;AAA+B,WAAI,CAAnC;AAAqC,WAAI,CAAzC;AAA2C,WAAI,CAA/C;AAAiD,WAAI,CAArD;AAAuD,WAAI,CAA3D;AAA6D,YAAK,CAAlE;AAAoE,YAAK;AAAzE;AAAhG,GAAf,CAAxB;;AAGA,QAAM6C,eAAe,GAAG,MAAM;AAC5BH,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMI,WAAW,GAAG,MAAM;AACxBJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMK,WAAW,GAAG,YAAW;AAC7B,QAAIC,GAAG,GAAG,MAAMjC,KAAK,CAACkC,IAAN,CAAW,4BAAX,EAAyC;AACvDC,MAAAA,SAAS,EAAExB,iBAD4C;AAEvDyB,MAAAA,OAAO,EAAEtB,eAF8C;AAGvDuB,MAAAA,IAAI,EAAErB,KAHiD;AAIvDsB,MAAAA,IAAI,EAAEC,QAAQ,CAACrB,IAAD;AAJyC,KAAzC,CAAhB,CAD6B,CAO7B;;AACAG,IAAAA,cAAc,CAACY,GAAD,CAAd,CAR6B,CAS7B;;AAEAJ,IAAAA,OAAO,CAACI,GAAG,CAACL,IAAL,CAAP;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYrB,WAAW,CAACQ,IAAxB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AAED,GAhBD;;AAoBA,WAASc,GAAT,GAAc;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAYrB,WAAZ;;AACA,QAAIA,WAAW,CAACQ,IAAZ,IAAoBe,SAApB,IAAiCvB,WAAW,CAACQ,IAAZ,CAAiBgB,KAAjB,IAA0BD,SAA/D,EAA0E;AACxEH,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,0BAAQ,QAAC,SAAD;AAAW,QAAA,WAAW,EAAE,EAAxB;AAA4B,QAAA,aAAa,EAAE;AAACI,UAAAA,GAAG,EAAE,SAAN;AAAiBC,UAAAA,GAAG,EAAC,CAAC;AAAtB;AAA3C;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KALW,CAMZ;;;AAEA,wBAAQ,QAAC,SAAD;AAAW,MAAA,WAAW,EAAE,EAAxB;AAA4B,MAAA,aAAa,EAAE;AAACD,QAAAA,GAAG,EAAE,SAAN;AAAiBC,QAAAA,GAAG,EAAC,CAAC;AAAtB,OAA3C;AAAA,iBAYHxB,qBAAqB,iBACpB,QAAC,UAAD;AACE,QAAA,YAAY,EAAE,MAAM;AAClBC,UAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD,SAHH;AAIE,QAAA,QAAQ,EAAE;AACRsB,UAAAA,GAAG,EAAEvB,qBAAqB,CAACyB,QADnB;AAERD,UAAAA,GAAG,EAAExB,qBAAqB,CAAC0B;AAFnB,SAJZ;AAAA,+BASE;AAAA,kCACE;AAAA,sBAAK1B,qBAAqB,CAAC2B;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAI,OAAO3B,qBAAqB,CAAC4B,KAA7B,IAAsC,WAAtC,gBACJ;AAAA,qCACE;AAAA,kDAAuB5B,qBAAqB,CAAC6B,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,6BADI,gBAMF;AAAA,qCACE;AAAA,oDAAyB7B,qBAAqB,CAACe,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AANF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,cAbE,EAqCHjB,WAAW,CAACQ,IAAZ,CAAiBwB,GAAjB,CAAqBC,aAAa,iBACjC,QAAC,MAAD;AACE,QAAA,aAAa,EAAE;AACbR,UAAAA,GAAG,EAAEQ,aAAa,CAACN,QADN;AAEbD,UAAAA,GAAG,EAAEO,aAAa,CAACL;AAFN,SADjB;AAKE,QAAA,MAAM,EAAE,OAAOK,aAAa,CAACH,KAArB,IAA8B,WAA9B,GAA4CG,aAAa,CAACF,KAA1D,GAAkEE,aAAa,CAACH,KAAd,GAAoB,IALhG;AAME,QAAA,OAAO,EAAE,MAAM;AACb3B,UAAAA,wBAAwB,CAAC8B,aAAD,CAAxB;AACD;AARH;AAAA;AAAA;AAAA;AAAA,cADD,CArCG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAmDD;;AAED,QAAMC,UAAU,GAAG3D,YAAY,CAACC,aAAa,CAAC8C,GAAD,CAAd,CAA/B;AAEA,QAAMa,MAAM,GAAGrE,MAAM,EAArB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIyC,IAAI,CAACgB,KAAL,IAAcD,SAAlB,EAA4B;AAE5B,YAAMa,IAAI,GAAG,EAAb;;AACA,WAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAY/B,IAAI,CAACgB,KAAjB,EAAwBgB,MAA1C,EAAiDH,CAAC,EAAlD,EAAqD;AACnDD,QAAAA,IAAI,CAACK,IAAL,CAAUjC,IAAI,CAACzB,KAAL,CAAWsD,CAAX,CAAV;AACD;;AACD,YAAMK,KAAK,GAAGN,IAAd;AACA,YAAMO,KAAK,GAAG,GAAd;AACA,YAAMC,MAAM,GAAG,GAAf;AACA,YAAMC,GAAG,GAAGhE,EAAE,CAACiE,MAAH,CAAUX,MAAM,CAACY,OAAjB,EACTC,IADS,CACJ,OADI,EACIL,KADJ,EAETK,IAFS,CAEJ,QAFI,EAEMJ,MAFN,EAGTK,KAHS,CAGH,UAHG,EAGS,SAHT,EAITA,KAJS,CAIH,YAJG,EAIU,MAJV,EAKTA,KALS,CAKH,aALG,EAKW,MALX,CAAZ;AAOAJ,MAAAA,GAAG,CAACK,MAAJ,CAAW,MAAX,EACGF,IADH,CACQ,WADR,EACqB,kBADrB,EAEGA,IAFH,CAEQ,GAFR,EAEaL,KAAK,GAAC,CAFnB,EAGGK,IAHH,CAGQ,GAHR,EAGa,EAHb,EAIGA,IAJH,CAIQ,WAJR,EAIqB,MAJrB,EAKGG,IALH,CAKQ,kCALR,EAhB4B,CAuB5B;;AACA,UAAIC,MAAM,GAAGvE,EAAE,CAACwE,SAAH,GAAeC,KAAf,CAAqB,CAAC,CAAD,EAAIX,KAAJ,CAArB,EAAiCY,OAAjC,CAAyC,GAAzC,CAAb;AAAA,UACIC,MAAM,GAAG3E,EAAE,CAAC4E,WAAH,GAAiBH,KAAjB,CAAuB,CAACV,MAAD,EAAS,CAAT,CAAvB,CADb;AAGA,UAAIc,CAAC,GAAGb,GAAG,CAACK,MAAJ,CAAW,GAAX,EACHF,IADG,CACE,WADF,EACe,eAAe,GAAf,GAAqB,GAArB,GAA2B,GAA3B,GAAiC,GADhD,CAAR;AAIEI,MAAAA,MAAM,CAACO,MAAP,CAAcjB,KAAK,CAACV,GAAN,CAAU,CAAC4B,GAAD,EAAKvB,CAAL,KAAWA,CAArB,CAAd;AACAmB,MAAAA,MAAM,CAACG,MAAP,CAAc,CAAC,CAAD,EAAI9E,EAAE,CAACgF,GAAH,CAAOnB,KAAP,CAAJ,CAAd;AAEAgB,MAAAA,CAAC,CAACR,MAAF,CAAS,GAAT,EACCF,IADD,CACM,WADN,EACmB,iBAAiBJ,MAAjB,GAA0B,GAD7C,EAECkB,IAFD,CAEMjF,EAAE,CAACkF,UAAH,CAAcX,MAAd,EAAsBY,UAAtB,CAAiC,UAASC,CAAT,EAAW;AAAC,eAAOA,CAAC,GAAC,CAAT;AAAY,OAAzD,CAFN,EAGCf,MAHD,CAGQ,MAHR,EAICF,IAJD,CAIM,GAJN,EAIWJ,MAAM,GAAG,GAJpB,EAKCI,IALD,CAKM,GALN,EAKWL,KAAK,GAAC,CALjB,EAMCK,IAND,CAMM,aANN,EAMqB,KANrB,EAOCA,IAPD,CAOM,QAPN,EAOgB,OAPhB,EAQCG,IARD,CAQM,OARN;AAUAO,MAAAA,CAAC,CAACR,MAAF,CAAS,GAAT,EACIY,IADJ,CACSjF,EAAE,CAACqF,QAAH,CAAYV,MAAZ,EAAoBQ,UAApB,CAA+B,UAASC,CAAT,EAAW;AAC5C,eAAOA,CAAP;AACH,OAFK,EAGLE,KAHK,CAGC,EAHD,CADT,EAKIjB,MALJ,CAKW,MALX,EAMIF,IANJ,CAMS,WANT,EAMsB,aANtB,EAOIA,IAPJ,CAOS,GAPT,EAOa,IAAEJ,MAAM,GAAC,CAPtB,EAQII,IARJ,CAQS,IART,EAQe,QARf,EASIA,IATJ,CASS,aATT,EASwB,KATxB,EAUIA,IAVJ,CAUS,QAVT,EAUmB,OAVnB,EAWIG,IAXJ,CAWS,iBAXT;AAaEO,MAAAA,CAAC,CAACU,SAAF,CAAY,MAAZ,EACE5D,IADF,CACOkC,KADP,EAEE2B,KAFF,GAEUnB,MAFV,CAEiB,MAFjB,EAGEF,IAHF,CAGO,OAHP,EAGgB,KAHhB,EAIEA,IAJF,CAIO,GAJP,EAIY,CAACsB,CAAD,EAAGjC,CAAH,KAASe,MAAM,CAACf,CAAD,CAJ3B,EAKEW,IALF,CAKO,GALP,EAKYQ,MALZ,EAMER,IANF,CAMO,OANP,EAMgBI,MAAM,CAACmB,SAAP,EANhB,EAOEvB,IAPF,CAOO,QAPP,EAOiBY,GAAG,IAAIhB,MAAM,GAAGY,MAAM,CAACI,GAAD,CAPvC;AAQL;AAAC,GAlEO,EAkEL,CAACpD,IAAD,CAlEK,CAAT,CAzGa,CA6Kb;;AACAzC,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,KAAK,CAAC4F,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAgDC,QAAQ,IAAI;AAC1DtD,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBqD,QAAvB;AACArE,MAAAA,WAAW,CAACqE,QAAD,CAAX;AACD,KAHD,EAGGC,KAHH,CAGSC,KAAK,IAAI;AAChBxD,MAAAA,OAAO,CAACC,GAAR,CAAYuD,KAAZ;AACD,KALD;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,cAAc,EAAC,cAA/B;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,eAAe,EAAEpF,oBADnB;AAEE,QAAA,YAAY,EAAID,iBAFlB;AAGE,QAAA,KAAK,EAAI;AAHX;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,UAAD;AACE,QAAA,eAAe,EAAEI,kBADnB;AAEE,QAAA,YAAY,EAAID,eAFlB;AAGE,QAAA,KAAK,EAAI;AAHX;AAAA;AAAA;AAAA;AAAA,cALF,eASE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEG;AAAhB;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAEE;AAAf;AAAA;AAAA;AAAA;AAAA,cAVF,eAYE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAEa,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eA0BE;AAAK,MAAA,KAAK,EAAI;AAAC+B,QAAAA,KAAK,EAAC,OAAP;AAAeC,QAAAA,MAAM,EAAC,MAAtB;AAA6BiC,QAAAA,SAAS,EAAE;AAAxC,OAAd;AAAA,6BACE,QAAC,IAAD;AAAA,+BACE,QAAC,UAAD;AACI,UAAA,YAAY,EAAI,+HADpB;AAEI,UAAA,cAAc,eAAE;AAAK,YAAA,KAAK,EAAE;AAAEjC,cAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFpB;AAGI,UAAA,gBAAgB,eAAE;AAAK,YAAA,KAAK,EAAE;AAAEA,cAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAHtB;AAII,UAAA,UAAU,eAAE;AAAK,YAAA,KAAK,EAAE;AAAEA,cAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA;AAJhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA1BF,eAqCE;AAAK,MAAA,KAAK,EAAI;AAACD,QAAAA,KAAK,EAAC,OAAP;AAAeC,QAAAA,MAAM,EAAC,OAAtB;AAA8BiC,QAAAA,SAAS,EAAE,EAAzC;AAA6CC,QAAAA,YAAY,EAAE;AAA3D,OAAd;AAAA,gBACK,OAAO9E,WAAW,CAACQ,IAAnB,KAA4B,WAA7B,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,gBAEA;AAAA,kBAEE,OAAOR,WAAW,CAACQ,IAAZ,CAAiBgB,KAAxB,KAAkC,WAAlC,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,gBAEE;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,oBAEA;AAAK,YAAA,GAAG,EAAIW;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAJJ;AAHJ;AAAA;AAAA;AAAA;AAAA,YArCF,eAsDE;AAAK,MAAA,KAAK,EAAI;AAACQ,QAAAA,KAAK,EAAC,OAAP;AAAeC,QAAAA,MAAM,EAAC,MAAtB;AAA6BiC,QAAAA,SAAS,EAAE,EAAxC;AAA4CC,QAAAA,YAAY,EAAE;AAA1D,OAAd;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD;;GArPQxF,G;;KAAAA,G;AAuPT,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport DatePicker from \"./components/DatePicker\"\nimport Menu from './components/Menu'\nimport TopN from './components/TopN'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow, Circle} from \"react-google-maps\";\nimport axios from 'axios'\nimport * as d3 from \"d3\";\nimport { red } from '@material-ui/core/colors';\nimport { count } from 'd3';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\n// import Map from \"./components/WrappedMap\"\n// d3 bar chart: https://www.youtube.com/watch?v=hOzKr8H_438\n\n\n// var data = {\"Month\":{\"0\":1,\"1\":2,\"2\":3,\"3\":4,\"4\":5,\"5\":6,\"6\":7,\"7\":8,\"8\":9,\"9\":10,\"10\":11,\"11\":12},\"count\":{\"0\":1137,\"1\":918,\"2\":977,\"3\":1146,\"4\":1360,\"5\":1357,\"6\":1295,\"7\":1149,\"8\":1083,\"9\":1213,\"10\":1065,\"11\":973}};\n\n\nfunction App() {\n  const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\n  const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\n  const [value,setValue] = useState(\"\");\n  const [topN,setTopN] = useState(\"\");\n  const [queryResult, setQueryResult] = useState({});\n  const [selectedNeighbourhood, setSelectedNeighbourhood] = useState(null);\n  const [testData, setTestData] = useState([{}]);\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = React.useState({\"Month\":{\"0\":1,\"1\":2,\"2\":3,\"3\":4,\"4\":5,\"5\":6,\"6\":7,\"7\":8,\"8\":9,\"9\":10,\"10\":11,\"11\":12},\"count\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0}}\n  );\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClick = async () =>{\n    let res = await axios.post('http://localhost:3003/api/', {\n      startDate: selectedStartDate,\n      endDate: selectedEndDate,\n      type: value,\n      topn: parseInt(topN)\n    })\n    // console.log(res)\n    setQueryResult(res)\n    // console.log(queryResult)\n\n    setData(res.data);\n    console.log(\"data update!\")\n    console.log(queryResult.data)\n    console.log(data)\n  \n  }\n\n\n    \n  function Map(){\n    console.log(queryResult)\n    if (queryResult.data == undefined || queryResult.data.Month != undefined) {\n      console.log(\"undefined!!!\")\n      return (<GoogleMap defaultZoom={10} defaultCenter={{lat: 53.544388, lng:-113.490929}}/>)\n    }\n    // console.log(typeof queryResult.data[0].ratio)\n\n    return (<GoogleMap defaultZoom={10} defaultCenter={{lat: 53.544388, lng:-113.490929}}>\n      {/* {queryResult.data.map(neighbourhood => (\n          <Marker\n            position={{\n              lat: neighbourhood.Latitude,\n              lng: neighbourhood.Longitude\n            }}\n            onClick={() => {\n              setSelectedNeighbourhood(neighbourhood);\n            }}\n          />\n        ))} */}\n        {selectedNeighbourhood && (\n          <InfoWindow\n            onCloseClick={() => {\n              setSelectedNeighbourhood(null);\n            }}\n            position={{\n              lat: selectedNeighbourhood.Latitude,\n              lng: selectedNeighbourhood.Longitude\n            }}\n          >\n            <div>\n              <h2>{selectedNeighbourhood.Neighbourhood}</h2>\n              <p>{typeof selectedNeighbourhood.ratio == 'undefined' ? \n              <>{\n                <p>total crime count: {selectedNeighbourhood.Count}</p>\n              }\n              </>\n                : \n                <>{\n                  <p>Most frequent crime: {selectedNeighbourhood.type}</p>\n                }</>\n                }</p>\n            </div>\n          </InfoWindow>\n        )}\n        {queryResult.data.map(neighbourhood => (\n          <Circle\n            defaultCenter={{\n              lat: neighbourhood.Latitude,\n              lng: neighbourhood.Longitude\n            }}\n            radius={typeof neighbourhood.ratio == 'undefined' ? neighbourhood.Count : neighbourhood.ratio*5000}\n            onClick={() => {\n              setSelectedNeighbourhood(neighbourhood);\n            }}\n          />\n        ))}\n\n    </GoogleMap>);\n  }\n\n  const WrappedMap = withScriptjs(withGoogleMap(Map));\n  \n  const svgRef = useRef();\n\n  useEffect(() => {\n    if (data.Month != undefined){ \n\n    const xtry = [];\n    for(let i =0; i < Object.keys(data.Month).length;i++){\n      xtry.push(data.count[i]);\n    }\n    const ydata = xtry;\n    const width = 800;\n    const height = 300;\n    const svg = d3.select(svgRef.current)\n      .attr('width',width)\n      .attr('height', height)\n      .style('overflow', 'visible')\n      .style('margin-top','75px')\n      .style('margin-left','75px');\n\n    svg.append(\"text\")\n      .attr(\"transform\", \"translate(100,0)\")\n      .attr(\"x\", width/4)\n      .attr(\"y\", 50)\n      .attr(\"font-size\", \"24px\")\n      .text(\"Crime in Neighbourhood by Months\")\n\n    // set scaling\n    var xScale = d3.scaleBand().range([0, width]).padding(0.4),\n        yScale = d3.scaleLinear().range([height, 0]);\n\n    var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + 100 + \",\" + 100 + \")\");\n\n  \n      xScale.domain(ydata.map((val,i) => i));\n      yScale.domain([0, d3.max(ydata)]);\n\n      g.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(xScale).tickFormat(function(d){return d+1;}))\n      .append(\"text\")\n      .attr(\"y\", height - 250)\n      .attr(\"x\", width/2)\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"stroke\", \"black\")\n      .text(\"Month\");\n\n      g.append(\"g\")\n         .call(d3.axisLeft(yScale).tickFormat(function(d){\n             return d;\n         })\n         .ticks(15))\n         .append(\"text\")\n         .attr(\"transform\", \"rotate(-90)\")\n         .attr(\"x\",0-height/4)\n         .attr(\"dy\", \"-5.1em\")\n         .attr(\"text-anchor\", \"end\")\n         .attr(\"stroke\", \"black\")\n         .text(\"Amount of Crime\");\n\n        g.selectAll(\".bar\")\n         .data(ydata)\n         .enter().append(\"rect\")\n         .attr(\"class\", \"bar\")\n         .attr(\"x\", (v,i) => xScale(i))\n         .attr(\"y\", yScale)\n         .attr(\"width\", xScale.bandwidth())\n         .attr(\"height\", val => height - yScale(val));\n  }} ,[data]);\n\n  // send data from backend to frontend\n  useEffect(()=>{\n    axios.get('http://localhost:3003/members').then(response => {\n      console.log(\"SUCCESS\", response)\n      setTestData(response)\n    }).catch(error => {\n      console.log(error)\n    })\n\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h1>\n        MM802 mini project\n      </h1>\n\n      <Grid container justifyContent=\"space-around\">\n        <DatePicker \n          setSelectedDate={setSelectedStartDate} \n          selectedDate = {selectedStartDate} \n          label = {\"Start Date\"}/>\n        <DatePicker \n          setSelectedDate={setSelectedEndDate} \n          selectedDate = {selectedEndDate} \n          label = {\"End Date\"}/>\n        <Menu setValue={setValue}/>\n        <TopN setTopN={setTopN}/>\n\n        <Button \n          variant=\"contained\" \n          color=\"primary\" \n          onClick={handleClick}>\n          Search\n        </Button>\n      </Grid>\n\n\n      <div style = {{width:'100vw',height:'50vh',marginTop: 40}} >\n        <Grid >\n          <WrappedMap \n              googleMapURL = {'https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDviHOxXfm0fv1fbQ3gT0GF81moFw99an4'} \n              loadingElement={<div style={{ height: `100%` }} />}\n              containerElement={<div style={{ height: `400px` }} />}\n              mapElement={<div style={{ height: `100%` }} />}\n            />\n        </Grid>\n      </div>\n\n      <div style = {{width:'100vw',height:'100vh',marginTop: 20, marginBottom: 20}} >\n        { (typeof queryResult.data === 'undefined') ? \n          <p>no chart</p> :\n          <>\n          {\n            typeof queryResult.data.Month === 'undefined' \n            ? <p>No data for bar chart</p> \n            : <> \n              <p> showing bar chart </p>,\n              <svg ref = {svgRef}/>\n            </>\n          }\n          </>\n        }\n\n        {/* <p> retrieve: {JSON.stringify(queryResult.data) } </p> */}\n      </div>\n      <dev style = {{width:'100vw',height:'50vh',marginTop: 20, marginBottom: 20}} >\n        <p>end of page </p>\n      </dev>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}