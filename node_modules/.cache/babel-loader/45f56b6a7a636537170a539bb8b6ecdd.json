{"ast":null,"code":"var _jsxFileName = \"/Users/shiyao/Documents/MM/MM802/mini_project/MM802-mini-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport DatePicker from \"./components/DatePicker\";\nimport Menu from './components/Menu';\nimport TopN from './components/TopN';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow, Circle } from \"react-google-maps\";\nimport axios from 'axios';\nimport * as d3 from \"d3\";\nimport { red } from '@material-ui/core/colors';\nimport { count } from 'd3';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { Box } from '@material-ui/core'; // import Map from \"./components/WrappedMap\"\n// d3 bar chart: https://www.youtube.com/watch?v=hOzKr8H_438\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar data = {\n  \"Month\": {\n    \"0\": 1,\n    \"1\": 2,\n    \"2\": 3,\n    \"3\": 4,\n    \"4\": 5,\n    \"5\": 6,\n    \"6\": 7,\n    \"7\": 8,\n    \"8\": 9,\n    \"9\": 10,\n    \"10\": 11,\n    \"11\": 12\n  },\n  \"count\": {\n    \"0\": 1137,\n    \"1\": 918,\n    \"2\": 977,\n    \"3\": 1146,\n    \"4\": 1360,\n    \"5\": 1357,\n    \"6\": 1295,\n    \"7\": 1149,\n    \"8\": 1083,\n    \"9\": 1213,\n    \"10\": 1065,\n    \"11\": 973\n  }\n};\n\nfunction App() {\n  _s();\n\n  const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\n  const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\n  const [value, setValue] = useState(\"\");\n  const [topN, setTopN] = useState(\"\");\n  const [queryResult, setQueryResult] = useState({});\n  const [selectedNeighbourhood, setSelectedNeighbourhood] = useState(null);\n  const [testData, setTestData] = useState([{}]);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // const [xtry, setxtry] = useState(null);\n  // const [ydata, setydata] = useState(null);\n\n\n  const handleClick = async () => {\n    let res = await axios.post('http://localhost:3003/api/', {\n      startDate: selectedStartDate,\n      endDate: selectedEndDate,\n      type: value,\n      topn: parseInt(topN)\n    }); // console.log(res)\n\n    setQueryResult(res);\n    console.log(queryResult); // var x=[];\n    // for(let i =0; i < Object.keys(queryResult.data.Month).length;i++){\n    //   x.push(queryResult.data.count[i]);\n    // }\n    // setxtry(x)\n    // setydata(xtry)\n  };\n\n  function Map() {\n    console.log(queryResult);\n\n    if (queryResult.data == undefined || queryResult.data.Month[0] == 1) {\n      console.log(\"undefined!!!\");\n      return /*#__PURE__*/_jsxDEV(GoogleMap, {\n        defaultZoom: 10,\n        defaultCenter: {\n          lat: 53.544388,\n          lng: -113.490929\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this);\n    }\n\n    console.log(typeof queryResult.data[0].ratio);\n    return /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 10,\n      defaultCenter: {\n        lat: 53.544388,\n        lng: -113.490929\n      },\n      children: [selectedNeighbourhood && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        onCloseClick: () => {\n          setSelectedNeighbourhood(null);\n        },\n        position: {\n          lat: selectedNeighbourhood.Latitude,\n          lng: selectedNeighbourhood.Longitude\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedNeighbourhood.Neighbourhood\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: typeof selectedNeighbourhood.ratio == 'undefined' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"total crime count: \", selectedNeighbourhood.Count]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Most frequent crime: \", selectedNeighbourhood.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), queryResult.data.map(neighbourhood => /*#__PURE__*/_jsxDEV(Circle, {\n        defaultCenter: {\n          lat: neighbourhood.Latitude,\n          lng: neighbourhood.Longitude\n        },\n        radius: typeof neighbourhood.ratio == 'undefined' ? neighbourhood.Count : neighbourhood.ratio * 5000,\n        onClick: () => {\n          setSelectedNeighbourhood(neighbourhood);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n  const WrappedMap = withScriptjs(withGoogleMap(Map));\n  const xtry = [];\n\n  for (let i = 0; i < Object.keys(data.Month).length; i++) {\n    xtry.push(data.count[i]);\n  }\n\n  const [ydata] = useState(xtry);\n  const svgRef = useRef();\n  useEffect(() => {\n    const width = 800;\n    const height = 300;\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height).style('overflow', 'visible').style('margin-top', '75px').style('margin-left', '75px');\n    svg.append(\"text\").attr(\"transform\", \"translate(100,0)\").attr(\"x\", width / 4).attr(\"y\", 50).attr(\"font-size\", \"24px\").text(\"Crime in Neighbourhood by Months\"); // set scaling\n\n    var xScale = d3.scaleBand().range([0, width]).padding(0.4),\n        yScale = d3.scaleLinear().range([height, 0]);\n    var g = svg.append(\"g\").attr(\"transform\", \"translate(\" + 100 + \",\" + 100 + \")\");\n    xScale.domain(ydata.map((val, i) => i));\n    yScale.domain([0, d3.max(ydata)]);\n    g.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(xScale).tickFormat(function (d) {\n      return d + 1;\n    })).append(\"text\").attr(\"y\", height - 250).attr(\"x\", width / 2).attr(\"text-anchor\", \"end\").attr(\"stroke\", \"black\").text(\"Month\");\n    g.append(\"g\").call(d3.axisLeft(yScale).tickFormat(function (d) {\n      return d;\n    }).ticks(15)).append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"x\", 0 - height / 4).attr(\"dy\", \"-5.1em\").attr(\"text-anchor\", \"end\").attr(\"stroke\", \"black\").text(\"Amount of Crime\");\n    g.selectAll(\".bar\").data(ydata).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", (v, i) => xScale(i)).attr(\"y\", yScale).attr(\"width\", xScale.bandwidth()).attr(\"height\", val => height - yScale(val));\n  }, []); // send data from backend to frontend\n\n  useEffect(() => {\n    axios.get('http://localhost:3003/members').then(response => {\n      console.log(\"SUCCESS\", response);\n      setTestData(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MM802 mini project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"space-around\",\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        setSelectedDate: setSelectedStartDate,\n        selectedDate: selectedStartDate,\n        label: \"Start Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        setSelectedDate: setSelectedEndDate,\n        selectedDate: selectedEndDate,\n        label: \"End Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        setValue: setValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TopN, {\n        setTopN: setTopN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleClick,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleClickOpen,\n        children: \"Open alert dialog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          autoFocus: true,\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100vw',\n        height: '50vh',\n        marginTop: 40\n      },\n      children: [typeof queryResult.data === 'undefined' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: typeof queryResult.data.Month === 'undefined' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data for bar chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" \", ( /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" showing bar chart \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n            ref: svgRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" retrieve: \", JSON.stringify(queryResult.data), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100vw',\n        height: '50vh',\n        marginTop: 40\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(WrappedMap, {\n          googleMapURL: 'https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDviHOxXfm0fv1fbQ3gT0GF81moFw99an4',\n          loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `100%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 31\n          }, this),\n          containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `400px`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 33\n          }, this),\n          mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `100%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 27\n          }, this) // test={queryResult.data}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"b4NWgMapaKz+E10UsUssT+bPF/c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shiyao/Documents/MM/MM802/mini_project/MM802-mini-project/src/App.js"],"names":["React","useState","useRef","useEffect","DatePicker","Menu","TopN","Grid","makeStyles","Button","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","Circle","axios","d3","red","count","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Box","data","App","selectedStartDate","setSelectedStartDate","Date","selectedEndDate","setSelectedEndDate","value","setValue","topN","setTopN","queryResult","setQueryResult","selectedNeighbourhood","setSelectedNeighbourhood","testData","setTestData","open","setOpen","handleClickOpen","handleClose","handleClick","res","post","startDate","endDate","type","topn","parseInt","console","log","Map","undefined","Month","lat","lng","ratio","Latitude","Longitude","Neighbourhood","Count","map","neighbourhood","WrappedMap","xtry","i","Object","keys","length","push","ydata","svgRef","width","height","svg","select","current","attr","style","append","text","xScale","scaleBand","range","padding","yScale","scaleLinear","g","domain","val","max","call","axisBottom","tickFormat","d","axisLeft","ticks","selectAll","enter","v","bandwidth","get","then","response","catch","error","marginTop","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport DatePicker from \"./components/DatePicker\"\nimport Menu from './components/Menu'\nimport TopN from './components/TopN'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow, Circle} from \"react-google-maps\";\nimport axios from 'axios'\nimport * as d3 from \"d3\";\nimport { red } from '@material-ui/core/colors';\nimport { count } from 'd3';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { Box } from '@material-ui/core';\n// import Map from \"./components/WrappedMap\"\n// d3 bar chart: https://www.youtube.com/watch?v=hOzKr8H_438\n\n\nvar data = {\"Month\":{\"0\":1,\"1\":2,\"2\":3,\"3\":4,\"4\":5,\"5\":6,\"6\":7,\"7\":8,\"8\":9,\"9\":10,\"10\":11,\"11\":12},\"count\":{\"0\":1137,\"1\":918,\"2\":977,\"3\":1146,\"4\":1360,\"5\":1357,\"6\":1295,\"7\":1149,\"8\":1083,\"9\":1213,\"10\":1065,\"11\":973}};\n\n\nfunction App() {\n  const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\n  const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\n  const [value,setValue] = useState(\"\");\n  const [topN,setTopN] = useState(\"\");\n  const [queryResult, setQueryResult] = useState({});\n  const [selectedNeighbourhood, setSelectedNeighbourhood] = useState(null);\n  const [testData, setTestData] = useState([{}]);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // const [xtry, setxtry] = useState(null);\n  // const [ydata, setydata] = useState(null);\n\n\n\n  const handleClick = async () =>{\n    let res = await axios.post('http://localhost:3003/api/', {\n      startDate: selectedStartDate,\n      endDate: selectedEndDate,\n      type: value,\n      topn: parseInt(topN)\n    })\n    // console.log(res)\n    setQueryResult(res)\n    console.log(queryResult)\n\n    // var x=[];\n    // for(let i =0; i < Object.keys(queryResult.data.Month).length;i++){\n    //   x.push(queryResult.data.count[i]);\n    // }\n    // setxtry(x)\n    // setydata(xtry)\n\n  }\n\n\n    \n  function Map(){\n    console.log(queryResult)\n    if (queryResult.data == undefined || queryResult.data.Month[0] == 1) {\n      console.log(\"undefined!!!\")\n      return (<GoogleMap defaultZoom={10} defaultCenter={{lat: 53.544388, lng:-113.490929}}/>)\n    }\n    console.log(typeof queryResult.data[0].ratio)\n\n    return (<GoogleMap defaultZoom={10} defaultCenter={{lat: 53.544388, lng:-113.490929}}>\n      {/* {queryResult.data.map(neighbourhood => (\n          <Marker\n            position={{\n              lat: neighbourhood.Latitude,\n              lng: neighbourhood.Longitude\n            }}\n            onClick={() => {\n              setSelectedNeighbourhood(neighbourhood);\n            }}\n          />\n        ))} */}\n        {selectedNeighbourhood && (\n          <InfoWindow\n            onCloseClick={() => {\n              setSelectedNeighbourhood(null);\n            }}\n            position={{\n              lat: selectedNeighbourhood.Latitude,\n              lng: selectedNeighbourhood.Longitude\n            }}\n          >\n            <div>\n              <h2>{selectedNeighbourhood.Neighbourhood}</h2>\n              <p>{typeof selectedNeighbourhood.ratio == 'undefined' ? \n              <>{\n                <p>total crime count: {selectedNeighbourhood.Count}</p>\n              }\n              </>\n                : \n                <>{\n                  <p>Most frequent crime: {selectedNeighbourhood.type}</p>\n                }</>\n                }</p>\n            </div>\n          </InfoWindow>\n        )}\n        {queryResult.data.map(neighbourhood => (\n          <Circle\n            defaultCenter={{\n              lat: neighbourhood.Latitude,\n              lng: neighbourhood.Longitude\n            }}\n            radius={typeof neighbourhood.ratio == 'undefined' ? neighbourhood.Count : neighbourhood.ratio*5000}\n            onClick={() => {\n              setSelectedNeighbourhood(neighbourhood);\n            }}\n          />\n        ))}\n\n    </GoogleMap>);\n  }\n\n  const WrappedMap = withScriptjs(withGoogleMap(Map));\n\n  const xtry = [];\n\n  for(let i =0; i < Object.keys(data.Month).length;i++){\n    xtry.push(data.count[i]);\n  }\n  const[ydata] =useState(xtry);\n  \n  const svgRef = useRef();\n\n  useEffect(() => {\n    const width = 800;\n    const height = 300;\n    const svg = d3.select(svgRef.current)\n      .attr('width',width)\n      .attr('height', height)\n      .style('overflow', 'visible')\n      .style('margin-top','75px')\n      .style('margin-left','75px');\n\n    svg.append(\"text\")\n      .attr(\"transform\", \"translate(100,0)\")\n      .attr(\"x\", width/4)\n      .attr(\"y\", 50)\n      .attr(\"font-size\", \"24px\")\n      .text(\"Crime in Neighbourhood by Months\")\n\n    // set scaling\n    var xScale = d3.scaleBand().range([0, width]).padding(0.4),\n        yScale = d3.scaleLinear().range([height, 0]);\n\n    var g = svg.append(\"g\")\n        .attr(\"transform\", \"translate(\" + 100 + \",\" + 100 + \")\");\n\n  \n      xScale.domain(ydata.map((val,i) => i));\n      yScale.domain([0, d3.max(ydata)]);\n\n      g.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(xScale).tickFormat(function(d){return d+1;}))\n      .append(\"text\")\n      .attr(\"y\", height - 250)\n      .attr(\"x\", width/2)\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"stroke\", \"black\")\n      .text(\"Month\");\n\n      g.append(\"g\")\n         .call(d3.axisLeft(yScale).tickFormat(function(d){\n             return d;\n         })\n         .ticks(15))\n         .append(\"text\")\n         .attr(\"transform\", \"rotate(-90)\")\n         .attr(\"x\",0-height/4)\n         .attr(\"dy\", \"-5.1em\")\n         .attr(\"text-anchor\", \"end\")\n         .attr(\"stroke\", \"black\")\n         .text(\"Amount of Crime\");\n\n        g.selectAll(\".bar\")\n         .data(ydata)\n         .enter().append(\"rect\")\n         .attr(\"class\", \"bar\")\n         .attr(\"x\", (v,i) => xScale(i))\n         .attr(\"y\", yScale)\n         .attr(\"width\", xScale.bandwidth())\n         .attr(\"height\", val => height - yScale(val));\n      } ,[]);\n\n  // send data from backend to frontend\n  useEffect(()=>{\n    axios.get('http://localhost:3003/members').then(response => {\n      console.log(\"SUCCESS\", response)\n      setTestData(response)\n    }).catch(error => {\n      console.log(error)\n    })\n\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h1>\n        MM802 mini project\n      </h1>\n\n      <Grid container justifyContent=\"space-around\">\n        <DatePicker \n          setSelectedDate={setSelectedStartDate} \n          selectedDate = {selectedStartDate} \n          label = {\"Start Date\"}/>\n        <DatePicker \n          setSelectedDate={setSelectedEndDate} \n          selectedDate = {selectedEndDate} \n          label = {\"End Date\"}/>\n        <Menu setValue={setValue}/>\n        <TopN setTopN={setTopN}/>\n\n        <Button \n          variant=\"contained\" \n          color=\"primary\" \n          onClick={handleClick}>\n          Search\n        </Button>\n        <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n\n      </Grid>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Use Google's location service?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous\n            location data to Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Disagree</Button>\n          <Button onClick={handleClose} autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <div style = {{width:'100vw',height:'50vh',marginTop: 40}} >\n\n        { (typeof queryResult.data === 'undefined') ? \n          <p>no chart</p> :\n          <>\n          {\n            typeof queryResult.data.Month === 'undefined' ?\n            <p>No data for bar chart</p> :\n            <> {<p> showing bar chart </p>,\n              <svg ref = {svgRef}/>}</>\n          }\n          </>\n        }\n\n        <p> retrieve: {JSON.stringify(queryResult.data) } </p>\n      </div>\n\n      {/* <p> xtry: {JSON.stringify(xtry)} </p>\n      <p> ydata: {JSON.stringify(ydata)} </p> */}\n\n      <div style = {{width:'100vw',height:'50vh',marginTop: 40}} >\n        <Grid >\n          <WrappedMap \n              googleMapURL = {'https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDviHOxXfm0fv1fbQ3gT0GF81moFw99an4'} \n              loadingElement={<div style={{ height: `100%` }} />}\n              containerElement={<div style={{ height: `400px` }} />}\n              mapElement={<div style={{ height: `100%` }} />}\n              // test={queryResult.data}\n            />\n        </Grid>\n      </div>\n\n\n\n{/*       \n      <p>\n          start date: {selectedStartDate.toLocaleString()}\n      </p>\n      <p>\n          end date: {selectedEndDate.toLocaleString()}\n      </p>\n      <p>\n          you selected crime type: {value}\n      </p>\n      <p>\n          N = {topN}\n      </p> */}\n      <svg ref = {svgRef}/> \n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}