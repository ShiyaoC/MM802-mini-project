{"ast":null,"code":"var _jsxFileName = \"/Users/shiyao/Documents/MM/MM802/mini_project/MM802-mini-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport DatePicker from \"./components/DatePicker\";\nimport Menu from './components/Menu';\nimport TopN from './components/TopN';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { GoogleMap, withScriptjs, withGoogleMap } from \"react-google-maps\";\nimport axios from 'axios';\nimport * as d3 from \"d3\"; // d3 bar chart: https://www.youtube.com/watch?v=hOzKr8H_438\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    defaultZoom: 10,\n    defaultCenter: {\n      lat: 53.544388,\n      lng: -113.490929\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 11\n  }, this);\n}\n\n_c = Map;\nconst WrappedMap = withScriptjs(_c2 = withGoogleMap(Map));\n_c3 = WrappedMap;\n\nfunction App() {\n  _s();\n\n  const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\n  const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\n  const [value, setValue] = useState(\"\");\n  const [topN, setTopN] = useState(\"\");\n  const [queryResult, setQueryResult] = useState({});\n  const [testData, setTestData] = useState([{}]); // this is an example data for bar chart\n\n  const [data] = useState([200, 20, 50, 240, 120, 250, 300]);\n  const svgRef = useRef();\n\n  const handleClick = async () => {\n    let res = await axios.post('http://localhost:3003/api/', {\n      startDate: selectedStartDate,\n      endDate: selectedEndDate,\n      type: value,\n      topn: parseInt(topN)\n    }); // console.log(res)\n\n    setQueryResult(res);\n    console.log(queryResult);\n  };\n\n  useEffect(() => {\n    // setup svg container\n    const w = 400;\n    const h = 300;\n    const svg = d3.select(svgRef.current).attr('width', w).attr('height', h).style('overflow', 'visible').style('margin-top', '75px').style('margin-left', '75px'); // set scaling\n\n    const xScale = d3.scaleBand().domain(data.map((val, i) => i)).range([0, w]).padding(0.5);\n    const yScale = d3.scaleLinear().range([h, 0]).domain([0, h]); //set the axes\n\n    const xAxis = d3.axisBottom(xScale).ticks(data.length);\n    const yAxis = d3.axisLeft(yScale).ticks(5);\n    svg.append('g').attr('transform', `translate(0, ${h})`).call(xAxis);\n    svg.append('g').call(yAxis); // set the svg data\n\n    svg.selectAll('.bar').data(data).join('rect').attr('x', (v, i) => xScale(i)).attr('y', yScale).attr('width', xScale.bandwidth).attr('height', val => h - yScale(val));\n  }, [data]); // send data from backend to frontend\n\n  useEffect(() => {\n    axios.get('http://localhost:3003/members').then(response => {\n      console.log(\"SUCCESS\", response);\n      setTestData(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MM802 mini project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"space-around\",\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        setSelectedDate: setSelectedStartDate,\n        selectedDate: selectedStartDate,\n        label: \"Start Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        setSelectedDate: setSelectedEndDate,\n        selectedDate: selectedEndDate,\n        label: \"End Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        setValue: setValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TopN, {\n        setTopN: setTopN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleClick,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), queryResult.data.Month === 'undefined' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"showing data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this) // <svg ref = {svgRef}/>\n    , /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100vw',\n        height: '100vh',\n        marginTop: 40\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(WrappedMap, {\n          googleMapURL: 'https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places',\n          loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `100%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 31\n          }, this),\n          containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `400px`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }, this),\n          mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `100%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"maNBxAEt1W53H4CgZ/mqU2Bwm6I=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"WrappedMap$withScriptjs\");\n$RefreshReg$(_c3, \"WrappedMap\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/shiyao/Documents/MM/MM802/mini_project/MM802-mini-project/src/App.js"],"names":["React","useState","useRef","useEffect","DatePicker","Menu","TopN","Grid","makeStyles","Button","GoogleMap","withScriptjs","withGoogleMap","axios","d3","Map","lat","lng","WrappedMap","App","selectedStartDate","setSelectedStartDate","Date","selectedEndDate","setSelectedEndDate","value","setValue","topN","setTopN","queryResult","setQueryResult","testData","setTestData","data","svgRef","handleClick","res","post","startDate","endDate","type","topn","parseInt","console","log","w","h","svg","select","current","attr","style","xScale","scaleBand","domain","map","val","i","range","padding","yScale","scaleLinear","xAxis","axisBottom","ticks","length","yAxis","axisLeft","append","call","selectAll","join","v","bandwidth","get","then","response","catch","error","Month","width","height","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport DatePicker from \"./components/DatePicker\"\nimport Menu from './components/Menu'\nimport TopN from './components/TopN'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { GoogleMap, withScriptjs, withGoogleMap} from \"react-google-maps\";\nimport axios from 'axios'\nimport * as d3 from \"d3\";\n// d3 bar chart: https://www.youtube.com/watch?v=hOzKr8H_438\n\nfunction Map(){\n  return (<GoogleMap defaultZoom={10} defaultCenter={{lat: 53.544388, lng:-113.490929}}/>);\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\n\nfunction App() {\n  const [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\n  const [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\n  const [value,setValue] = useState(\"\");\n  const [topN,setTopN] = useState(\"\");\n  const [queryResult, setQueryResult] = useState({});\n\n  const [testData, setTestData] = useState([{}]);\n\n  // this is an example data for bar chart\n  const [data] = useState([200,20,50,240,120,250,300]);\n  const svgRef = useRef();\n\n  const handleClick = async () =>{\n    let res = await axios.post('http://localhost:3003/api/', {\n      startDate: selectedStartDate,\n      endDate: selectedEndDate,\n      type: value,\n      topn: parseInt(topN)\n    })\n    // console.log(res)\n    setQueryResult(res)\n    console.log(queryResult)\n  }\n\n  useEffect(() => {\n    // setup svg container\n    const w = 400;\n    const h = 300;\n    const svg = d3.select(svgRef.current)\n      .attr('width',w)\n      .attr('height', h)\n      .style('overflow', 'visible')\n      .style('margin-top','75px')\n      .style('margin-left','75px');\n\n    // set scaling\n    const xScale = d3.scaleBand()\n      .domain(data.map((val,i) => i))\n      .range([0,w])\n      .padding(0.5);\n    const yScale = d3.scaleLinear()\n      .range([h,0])\n      .domain([0,h]);\n\n    //set the axes\n    const xAxis = d3.axisBottom(xScale)\n      .ticks(data.length);\n    const yAxis = d3.axisLeft(yScale)\n      .ticks(5);\n\n    svg.append('g')\n      .attr('transform', `translate(0, ${h})`)\n      .call(xAxis);\n    svg.append('g').call(yAxis);\n    \n    // set the svg data\n    svg.selectAll('.bar')\n      .data(data)\n      .join('rect')\n        .attr('x',(v,i) => xScale(i))\n        .attr('y', yScale)\n        .attr('width', xScale.bandwidth)\n        .attr('height', val => h - yScale(val));\n  } ,[data]);\n\n  // send data from backend to frontend\n  useEffect(()=>{\n    axios.get('http://localhost:3003/members').then(response => {\n      console.log(\"SUCCESS\", response)\n      setTestData(response)\n    }).catch(error => {\n      console.log(error)\n    })\n\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <h1>\n        MM802 mini project\n      </h1>\n      \n\n\n      <Grid container justifyContent=\"space-around\">\n        <DatePicker \n          setSelectedDate={setSelectedStartDate} \n          selectedDate = {selectedStartDate} \n          label = {\"Start Date\"}/>\n        <DatePicker \n          setSelectedDate={setSelectedEndDate} \n          selectedDate = {selectedEndDate} \n          label = {\"End Date\"}/>\n        <Menu setValue={setValue}/>\n        <TopN setTopN={setTopN}/>\n\n        <Button \n          variant=\"contained\" \n          color=\"primary\" \n          onClick={handleClick}>\n          Search\n        </Button>\n      </Grid>\n\n      {(queryResult.data.Month === 'undefined') ? \n        (<p>\n          no data\n        </p>):\n        (\n        <p>showing data</p>\n        // <svg ref = {svgRef}/>\n      )}\n\n      <div style = {{width:'100vw',height:'100vh',marginTop: 40}} >\n        <Grid >\n          <WrappedMap \n              googleMapURL = {'https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places'} \n              loadingElement={<div style={{ height: `100%` }} />}\n              containerElement={<div style={{ height: `400px` }} />}\n              mapElement={<div style={{ height: `100%` }} />}\n            />\n\n\n        </Grid>\n        {/* {(typeof testData.data.members === 'undefined') ? (\n        <p>loading...</p>\n      ) : (\n        testData.data.members.map((member,i) => (\n          <p key={i}>{member}</p>\n        ))\n      )}  */}\n\n\n\n      </div>\n\n    \n\n\n{/*       \n      <p>\n          start date: {selectedStartDate.toLocaleString()}\n      </p>\n      <p>\n          end date: {selectedEndDate.toLocaleString()}\n      </p>\n      <p>\n          you selected crime type: {value}\n      </p>\n      <p>\n          N = {topN}\n      </p> */}\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}